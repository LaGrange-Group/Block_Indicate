@model Block_Indicate.Models.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}
@*position: absolute; top:0; right:0; left:0; float:right*@
<script src="~/js/Chart/highcharts.js"></script>
<script src="~/js/Chart/exporting.js"></script>
<script src="~/js/Chart/export-data.js"></script>
<style>

    .dropbtn {
        background-color: #ffffff;
        background-image: url("https://pngimage.net/wp-content/uploads/2018/06/logo-menu-png-6.png");
        background-size:cover;
        color: white;
        padding: 1em;
        padding-bottom:1.5em;
        font-size: 16px;
        border: none;
        cursor: pointer;
        padding-right:2em;
        outline:none;
    }

        .dropbtn:hover, .dropbtn:focus {
            background-image: url("https://i.imgur.com/ZfcE5MY.png");
        }

    .dropdown {
        padding-top:0.9em;
        padding-right: 2em;
        float: right;
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #282741;
        border-radius:20px;
        min-width: 160px;
        overflow: auto;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        right: 0;
        z-index: 1;
    }

        .dropdown-content a {
            font-size: 1.2em;
            color: #999999;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

    .dropdown a:hover {
        color: white;
    }

    .show {
        display: block;
    }

    #dashdiv {
        border-radius: 10px;
        background-color: #dedede;
        width:100%;
        height:220px;
    }
    li{
        font-size:16px;
        padding-bottom:1em;
        color: #747474
    }
    #align-center {
        display: flex;
        align-items: center;
    }
    table {
        overflow-y: scroll;
        height: 120px;
        display: block;
    }
    td{
        width:10%;
    }
    .badge {
        padding: 1px 9px 2px;
        font-size: 12.025px;
        font-weight: bold;
        white-space: nowrap;
        color: #ffffff;
        background-color: #999999;
        -webkit-border-radius: 9px;
        -moz-border-radius: 9px;
        border-radius: 9px;
    }

        .badge:hover {
            color: #ffffff;
            text-decoration: none;
            cursor: pointer;
        }

    .badge-error {
        background-color: #b94a48;
    }

        .badge-error:hover {
            background-color: #953b39;
        }

    .badge-success {
        background-color: #468847;
    }
    .badge-info {
        background-color: #3a87ad;
    }

        .badge-info:hover {
            background-color: #2d6987;
        }

    .badge-inverse {
        background-color: #333333;
    }

        .badge-inverse:hover {
            background-color: #1a1a1a;
        }
    .badge-warning {
        background-color: #f89406;
    }

        .badge-warning:hover {
            background-color: #c67605;
        }
    /*#F2F2F2*/
</style>
<div style="height:5em; position: absolute; top:0; right:0; left:17.8em; border-bottom:2px solid black">
    <div class="row">
        <div class="col-md-2" style="height:10px">
            <div style="padding-top:1.5em">
                <span style="padding-left:2em"><span style="font-size:1.5em">BTC: </span><span style="font-size:1.2em">@Html.Raw(Model.TotalBTC.ToString("0.######"))</span></span>
            </div>
        </div>
        <div class="col-md-2" style="height:10px; padding:0px">
            <div style="padding-top:1.5em; float:left">
                <span><span style="font-size:1.5em">USD: </span><span style="font-size:1.2em">$@Html.Raw((Model.TotalBTC * Model.BalanceDetails[0].LastPrice).ToString("0.##"))</span></span>
            </div>
        </div>
        <div class="col-md-2" style="height:10px">
            <div style="margin-top:1.5em; float:right">
                <span><strong style="font-size:1.5em;">BTC</strong><span style="font-size:1.5em"> / </span><span style="font-size:1.5em">Bitcoin</span><span style="font-size:1.5em; color:green"><strong>&nbsp;&nbsp;&nbsp;&nbsp;$@Html.Raw(Model.BalanceDetails[0].LastPrice.ToString("0.#########"))</strong></span></span>
            </div>
        </div>
        <div class="col-md-2" style="height:10px">
            <div style=" margin-top:1.5em">
                <span style=" vertical-align:middle"><strong style="font-size:1.5em;">ETH</strong><span style="font-size:1.5em"> / </span><span style="font-size:1.5em">Ethereum</span><span style="font-size:1.5em; color:deepskyblue"><strong>&nbsp;&nbsp;&nbsp;&nbsp;$@Html.Raw(Model.BalanceDetails[1].LastPrice.ToString("0.#########"))</strong></span></span>
            </div>
        </div>
        <div style="padding:0px; height:10px" class="col-md-4">
            <div class="row">
                <div class="col-md-4">
                    <center>
                        <div style=" padding-top:0.5em">
                            <img style="height:55px; width:55px; float:right;" src="https://i.imgur.com/PxtEzu3.png" />
                        </div>
                    </center>
                </div>
                <div class="col-md-4">
                    <div style=" margin-top:1.5em;">
                        <span style="font-size:1.5em;">@Html.Raw(Model.Customer.ApplicationUser.Email)</span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="dropdown">
                        <button onclick="myFunction()" class="dropbtn" style="width:2em; height:2em"></button>
                        <div id="myDropdown" class="dropdown-content">
                            <a asp-area="" asp-controller="Customers" asp-action="Profile">Profile</a>
                            <a asp-area="" asp-controller="Customers" asp-action="Billing">Billing</a>
                            <a asp-area="" asp-controller="Customers" asp-action="Settings">Settings</a>
                            <a asp-area="" asp-controller="Identity/Account/" asp-action="Login">Logout</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row" style="padding-top:2em">
    <div class="col-md-3">
        <div id="dashdiv">
            <h4 style="padding-top:1em; padding-left:1em">In Development</h4>
            <hr />
            <ul>
                <li>
                    Huobi Integration
                </li>
                <li>
                    Doji Finder
                </li>
                <li>
                    Request a Feature
                </li>
            </ul>
        </div>
    </div>
    <div class="col-md-3">
        <div id="dashdiv">
            <h4 style="padding-top:1em; padding-left:1em">Released Features</h4>
            <hr />
            <ul>
                <li>
                    Trading Bot
                </li>
                <li>
                    Trade Monitoring
                </li>
                <li>
                    Double Volume + 4 Hour Doji's
                </li>
            </ul>

        </div>
    </div>
    <div class="col-md-3">
        <div id="dashdiv">
            <h4 style="padding-top:1em; padding-left:1em">Active Bots</h4>
            <hr />
            <div style="position:absolute; top:4.5em; left:9em">
                <center>
                    <div>
                        <span style="font-size:5.5em; color:#747474"><span style="color:#86c689">@Html.Raw(Model.ActiveBots.ToString())</span>/<span></span>@Html.Raw(Model.BotsTotal.ToString())</span>
                    </div>
                    <div>
                        @Html.ActionLink("Manage", "Index", "TradingBot", null, new { @class = "btn btn-danger btn-large", style = "width:150px;" })
                    </div>
                </center>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div id="dashdiv" style="vertical-align:middle">
            <h4 style="padding-top:1em; padding-left:1em">Bot Performance</h4>
            <hr style="padding:0px" />
            <center style="padding:0px">
                @*<h3 style="padding-top:0.15em">Success: <span style="color:green">@Math.Round(Model.TradePerformance.DVBSuccess, 2) %</span></h3>
                <h3>No Trade: <span style="color:yellow">@Math.Round(Model.TradePerformance.DVBNoTrade, 2) %</span></h3>
                <h3>Fail: <span style="color:red">@Math.Round(Model.TradePerformance.DVBFail, 2) %</span></h3>*@
                <div style="padding:0px;  padding-bottom:4em;">
                    <div id="container-botperformance" style="min-width: 310px; height: 170px; width: 170px; margin: 0 auto; background-color:transparent; padding-bottom:4em"></div>
                </div>
            </center>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-8">
        <div id="dashdiv" style=" width:100%; height:200px; background-color:#dedede">
            @if (Model.BalanceDetails != null)
            {
                <div class="row">
                    <div class="col-md-6">
                        <div class="row" style="padding-left:1em">
                            <div class="col-md-4">
                                <div style="padding-top:4em; padding-left:2em">
                                    <h2>Binance</h2>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div style="padding-top:3.5em">
                                    <img style="height:100px; width:100px" src="https://i.imgur.com/wolEHmr.png" />
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div style="float:left; padding:0px">
                                    <div id="container-assets" style="min-width: 310px; height: 190px; width: 190px; margin: 0 auto; background-color:transparent; padding-top:0.7em; padding-right:7em; float:left;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div id="container-performance" style="min-width: 310px; height: 200px; width:auto; margin: 0 auto; padding-right:2em"></div>
                    </div>
                </div>
            }
            else
            {
                <div style="padding-top:4em">
                    <center>
                        <h1 style="color:#ededed; font-size:4em">Binance Integration</h1>
                    </center>
                </div>
            }
        </div>
    </div>
    <div class="col-md-4">
        <div id="dashdiv" style=" width:100%; height:200px; background-color:#dedede">
            <div style="padding-top:4em">
                <center>
                    <h1 style="color:#ededed; font-size:4em">Huobi Integration</h1>
                </center>
            </div>
        </div>
    </div>
</div>

<br />
<div id="dashdiv" style=" width:100%; height:400px; background-color:#dedede;">
    <div class="row">
        <div class="col-md-6">
            <center>
                <h4>Double Volume</h4>
            </center>
            <hr />
            <div class="row">
                <div class="col-md-6">

                </div>
                <div class="col-md-6">

                </div>
            </div>
            <table style="height:300px; padding-left:1em">
                <tr>
                    <th>
                        Symbol
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        VWAP
                    </th>
                    <th>
                        Precent Change
                    </th>
                    <th>
                        Volume (BTC)
                    </th>
                    <th>
                        Time of Signal
                    </th>
                </tr>
                @foreach (var row in Model.ValidDoubleVolumesBinance)
                {
                <tr>
                    <td>
                        <strong>@Html.Raw(row.Symbol)</strong>
                    </td>
                    <td>
                        <span class="badge badge-inverse">@Html.Raw(row.LastPrice.ToString("0.########################"))</span>
                    </td>
                    <td>
                        <span>@Html.Raw(row.Vwap.ToString("0.########################"))</span>
                    </td>
                    <td>
                        @if (row.PercentageChange > 0)
                        {
                            <span class="badge badge-success">@Html.Raw(Math.Round(row.PercentageChange, 2)) %</span>
                        }
                        else
                        {
                            <span class="badge badge-error">@Html.Raw(row.PercentageChange) %</span>
                        }
                    </td>
                    <td>
                        <span>@Html.Raw(row.BitcoinVolume.ToString("0.##"))</span>
                    </td>
                    <td>
                        <span>@Html.Raw(row.RealTime)</span>
                        @*@if (DateTime.Now - row.RealTime < new TimeSpan(0, 1, 0, 0, 0))
                        {

                        }
                        else if (DateTime.Now - row.RealTime < new TimeSpan(0, 2, 0, 0, 0))
                        {
                            <span class="badge badge-warning">@Html.Raw(row.RealTime)</span>
                        }
                        else
                        {
                            <span class="badge badge-primary">@Html.Raw(row.RealTime)</span>
                        }*@
                    </td>
                </tr>
                }
            </table>
        </div>
        <div class="col-md-6">
            <center>
                <h4>4 Hour Doji's</h4>
            </center>
            <hr />
            <table style="height:300px; padding-left:1em">
                <tr>
                    <th>
                        Symbol
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        VWAP
                    </th>
                    <th>
                        Precent Change
                    </th>
                    <th>
                        Volume (BTC)
                    </th>
                    <th>
                        Time of Signal
                    </th>
                </tr>
                @foreach (var row in Model.ValidDojiFourHoursBinance)
                {
                    <tr>
                        <td>
                            <strong>@Html.Raw(row.Symbol)</strong>
                        </td>
                        <td>
                            <span class="badge badge-inverse">@Html.Raw(row.LastPrice.ToString("0.########################"))</span>
                        </td>
                        <td>
                            @Html.Raw(row.Vwap.ToString("0.########################"))
                        </td>
                        <td>
                            @if (row.PercentageChange > 0)
                            {
                                <span class="badge badge-success">@Html.Raw(Math.Round(row.PercentageChange, 2)) %</span>
                            }
                            else
                            {
                                <span class="badge badge-error">@Html.Raw(row.PercentageChange) %</span>
                            }
                        </td>
                        <td>
                            @Html.Raw(row.BitcoinVolume.ToString("0.##"))
                        </td>
                        <td>
                            @Html.Raw(row.RealTime)
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>

<script>
    Highcharts.setOptions({
        colors: ['#f0f7b4', '#4363d8', '#ffe119', '#911eb4', '#fabebe', '#f032e6', '#bcf60c', '#f58231', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#46f0f0', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']
    });
    Highcharts.chart('container-assets', {
        chart: {
            backgroundColor: null,
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie',
            margin: [0, 0, 0, 0],
            spacingTop: 0,
            spacingBottom: 0,
            spacingLeft: 0,
            spacingRight: 0
        },
        title: {
            text: ''
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b> <br>Amount:{point.amount}</b> <br>Bitcoin Value:{point.bitcoinvalue} <br>USD Value:{point.usdvalue}'
        },
        plotOptions: {
            pie: {
                size:'100%',
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: false,
                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                    style: {
                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                    }
                }
            }
        },
        exporting: {
            enabled: false
        }, credits: {
            enabled: false
        },
        series: [{
            name: 'Percent',
            colorByPoint: true,
            data: [
            @for (int i = 2; i < Model.BalanceDetails.Count - 1; i++)
            {

                    if (i == 2)
                    {
                        <text>
                        {
                            name: '@Model.BalanceDetails[i].Name',
                            y: @Model.BalanceDetails[i].BitcoinValue,
                            amount: @Model.BalanceDetails[i].Amount,
                            bitcoinvalue: @Model.BalanceDetails[i].Amount,
                            usdvalue: @Model.BalanceDetails[i].USDValue,
                            sliced: true,
                            selected: true
                        },
                        </text>
                    }else if (i < Model.BalanceDetails.Count - 2)
                    {
                        <text>
                        {
                            name: '@Model.BalanceDetails[i].Name',
                            y: @Model.BalanceDetails[i].BitcoinValue,
                            amount: @Model.BalanceDetails[i].Amount,
                            bitcoinvalue: @Model.BalanceDetails[i].Amount,
                            usdvalue: @Model.BalanceDetails[i].USDValue
                        },
                        </text>
                    }
                    else
                    {
                        <text>
                        {
                            name: '@Model.BalanceDetails[i].Name',
                            y: @Model.BalanceDetails[i].BitcoinValue,
                            amount: @Model.BalanceDetails[i].Amount,
                            bitcoinvalue: @Model.BalanceDetails[i].Amount,
                            usdvalue: @Model.BalanceDetails[i].USDValue
                        }]
                        </text>
                    }
                
            }
        }]
    });
</script>

<script>
    Highcharts.setOptions({
        colors: ['#3cb44b', '#ffff00', '#e6194b']
    });
    Highcharts.chart('container-botperformance', {
        chart: {
            backgroundColor: null,
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie',
            margin: [10, 0, 10, 0],
            spacingTop: 10,
            spacingBottom: 0,
            spacingLeft: 0,
            spacingRight: 0
        },
        title: {
            text: ''
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                size:'100%',
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                    style: {
                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                    }
                }
            }
        },
        exporting: {
            enabled: false
        }, credits: {
            enabled: false
        },
        series: [{
            name: 'Percent',
            colorByPoint: true,
            data: [{
                name: 'Success',
                y: @Math.Round(Model.TradePerformance.DVBSuccess, 2),
                sliced: true,
                selected: true
            },
            {
                name: 'No Trade',
                y: @Math.Round(Model.TradePerformance.DVBNoTrade, 2)
            },
            {
                name: 'Fail',
                y: @Math.Round(Model.TradePerformance.DVBFail, 2)
            }]
        }]
    });
</script>

<script>
    Highcharts.setOptions({
        colors: ['#7cb5ec', '#434348']
    });
    Highcharts.chart('container-performance', {
        chart: {
            backgroundColor: "#dedede",
            type: 'line'
        },
        title: {
            text: 'Performance'
        },
        plotOptions: {
            line: {
                dataLabels: {
                    enabled: true
                },
                enableMouseTracking: false
            }
        },
        yAxis: {
            labels: {
                format: '{value:.2f}'
            },
            title: {
                enabled: false
            }

        },
        exporting: {
            enabled: false
        }, credits: {
            enabled: false
        },
        series: [{
            name: 'BTC',
            data: [0.003345, 0.003045, 0.002945, 0.002545]
        },
            {
            name: 'USD',
            data: [13.82, 12.60, 11.25, 8.60]
        }]
    });
</script>
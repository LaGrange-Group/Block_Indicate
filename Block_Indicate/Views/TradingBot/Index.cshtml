@model Block_Indicate.Models.TradeBotViewModel
@{
    ViewData["Title"] = "Index";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<style>
    .dropbtn {
        background-color: #ffffff;
        background-image: url("https://pngimage.net/wp-content/uploads/2018/06/logo-menu-png-6.png");
        background-size: cover;
        color: white;
        padding: 1em;
        padding-bottom: 1.5em;
        font-size: 16px;
        border: none;
        cursor: pointer;
        padding-right: 2em;
        outline: none;
    }

        .dropbtn:hover, .dropbtn:focus {
            background-image: url("https://i.imgur.com/ZfcE5MY.png");
        }

    .dropdown {
        padding-top: 0.9em;
        padding-right: 2em;
        float: right;
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #282741;
        border-radius: 20px;
        min-width: 160px;
        overflow: auto;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        right: 0;
        z-index: 1;
    }

        .dropdown-content a {
            font-size:1.2em;
            color: #999999;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

    .dropdown a:hover {
        color: white;
    }

    .show {
        display: block;
    }
    #dashdiv {
        border-radius: 10px;
        background-color: #dedede;
        width: 100%;
        height: 300px;
        padding-bottom:2em;
    }
    #spanFont{
        font-size:1.2em;
    }
    #leftPad{
        padding-left:1em;
    }
    li {
        font-size: 16px;
        padding-bottom: 1em;
    }

    #align-center {
        display: flex;
        align-items: center;
    }

    table {
        overflow-y: scroll;
        height: 120px;
        display: block;
    }

    td {
        width: 10%;
    }
    /*#F2F2F2*/
</style>
<div style="height:5em; position: absolute; top:0; right:0; left:17.8em; border-bottom:2px solid black">
    <div class="row">
        <div class="col-md-2" style="height:10px">
            <div style="padding-top:1.5em">
                <span style="padding-left:2em"><span style="font-size:1.5em">BTC: </span><span style="font-size:1.2em">@Html.Raw(Model.EstimatedBTC.ToString("0.######"))</span></span>
            </div>
        </div>
        <div class="col-md-2" style="height:10px; padding:0px">
            <div style="padding-top:1.5em; float:left">
                <span><span style="font-size:1.5em">USD: </span><span style="font-size:1.2em">$@Html.Raw((Model.EstimatedBTC * Convert.ToDecimal(Model.CurrentPrices["btc"])).ToString("0.##"))</span></span>
            </div>
        </div>
        <div class="col-md-2" style="height:10px">
            <div style="margin-top:1.5em; float:right">
                <span><strong style="font-size:1.5em;">BTC</strong><span style="font-size:1.5em"> / </span><span style="font-size:1.5em">Bitcoin</span><span style="font-size:1.5em; color:green"><strong>&nbsp;&nbsp;&nbsp;&nbsp;$@Html.Raw(Model.CurrentPrices["btc"])</strong></span></span>
            </div>
        </div>
        <div class="col-md-2" style="height:10px">
            <div style=" margin-top:1.5em">
                <span style=" vertical-align:middle"><strong style="font-size:1.5em;">ETH</strong><span style="font-size:1.5em"> / </span><span style="font-size:1.5em">Ethereum</span><span style="font-size:1.5em; color:deepskyblue"><strong>&nbsp;&nbsp;&nbsp;&nbsp;$@Html.Raw(Model.CurrentPrices["eth"])</strong></span></span>
            </div>
        </div>
        <div style="padding:0px; height:10px" class="col-md-4">
            <div class="row">
                <div class="col-md-4">
                    <center>
                        <div style=" padding-top:0.5em">
                            <img style="height:55px; width:55px; float:right;" src="https://i.imgur.com/PxtEzu3.png" />
                        </div>
                    </center>
                </div>
                <div class="col-md-4">
                    <div style=" margin-top:1.5em;">
                        <span style="font-size:1.5em;">@Html.Raw(Model.Customer.ApplicationUser.Email)</span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="dropdown">
                        <button onclick="myFunction()" class="dropbtn" style="width:2em; height:2em"></button>
                        <div id="myDropdown" class="dropdown-content">
                            <a asp-area="" asp-controller="Customers" asp-action="Profile">Profile</a>
                            <a asp-area="" asp-controller="Customers" asp-action="Billing">Billing</a>
                            <a asp-area="" asp-controller="Customers" asp-action="Settings">Settings</a>
                            <a asp-area="" asp-controller="Identity/Account/" asp-action="Login">Logout</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div style="padding-top:3em">
    <center>
        @if (Model.TradeBots.Count > 7)
        {
            <label class="btn btn-default btn-large" style="width:300px">Max Bots: Delete one to create a new one.</label>
        }
        else
        {
            <button type="button" class="btn btn-primary btn-large" id="Gift_Form" style="width:300px">Create Bot</button>
        }
    </center>
    <hr />
</div>

<div>
    <div class="row">
        @for (int i = 0; i < Model.TradeBots.Count; i++)
        {
            if (i < 8)
            {

                @if (i == 0)
                {
                    <div class="col-md-3">
                        <div id="dashdiv">
                            <center>
                                <h3 style="padding-top:1em">@Html.Raw(Model.TradeBots[i].Name)</h3>
                            </center>
                            <hr />
                            <div class="row">
                                <div class="col-md-6">
                                    <h4 id="leftPad">Trade Type: <strong>@Html.Raw(Model.TradeBots[i].Type)</strong></h4>
                                    <h4 id="leftPad">Async Trades: <strong>@Html.Raw(Model.TradeBots[i].NumberOfTrades.ToString())</strong></h4>
                                    <h4 id="leftPad">All Markets: <strong>@Html.Raw(Model.TradeBots[i].AllMarkets.ToString())</strong></h4>
                                    <h4 id="leftPad">Base: <strong>Bitcoin</strong></h4>
                                </div>
                                <div class="col-md-6">
                                    <h4>Bitcoin: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].AllocatedBitcoin, 5).ToString("0.###########"))</strong></h4>
                                    <h4>Take Profit: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].PercentTakeProfit, 2).ToString()) %</strong></h4>
                                    <h4>Stop Loss: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].PercentStopLoss, 2).ToString()) %</strong></h4>
                                    <h4>Exchange: <strong>@Html.Raw(Model.TradeBots[i].Exchange)</strong></h4>
                                </div>
                            </div>
                            <div class="row" style="padding-top:0.5em">
                                <div class="col-md-6">
                                    @if (Model.TradeBots[i].Status == true)
                                    {
                                        @Html.ActionLink("Deactivate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-warning btn-large", style = "width:150px; float:right" })

                                    }
                                    else
                                    {
                                        @Html.ActionLink("Activate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-success btn-large", style = "width:150px; float:right" })

                                    }
                                </div>
                                <div class="col-md-6">
                                    @Html.ActionLink("Delete", "DeleteBot", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-danger btn-large", style = "width:150px; float:left" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (i == 1)
                {
                    <div class="col-md-3">
                        <div id="dashdiv">
                            <center>
                                <h3 style="padding-top:1em">@Html.Raw(Model.TradeBots[i].Name)</h3>
                            </center>
                            <hr />
                            <div class="row">
                                <div class="col-md-6">
                                    <h4 id="leftPad">Trade Type: <strong>@Html.Raw(Model.TradeBots[i].Type)</strong></h4>
                                    <h4 id="leftPad">Async Trades: <strong>@Html.Raw(Model.TradeBots[i].NumberOfTrades.ToString())</strong></h4>
                                    <h4 id="leftPad">All Markets: <strong>@Html.Raw(Model.TradeBots[i].AllMarkets.ToString())</strong></h4>
                                    <h4 id="leftPad">Base: <strong>Bitcoin</strong></h4>
                                </div>
                                <div class="col-md-6">
                                    <h4>Bitcoin: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].AllocatedBitcoin, 5).ToString("0.###########"))</strong></h4>
                                    <h4>Take Profit: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].PercentTakeProfit, 2).ToString()) %</strong></h4>
                                    <h4>Stop Loss: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].PercentStopLoss, 2).ToString()) %</strong></h4>
                                    <h4>Exchange: <strong>@Html.Raw(Model.TradeBots[i].Exchange)</strong></h4>
                                </div>
                            </div>
                            <div class="row" style="padding-top:0.5em">
                                <div class="col-md-6">
                                    @if (Model.TradeBots[i].Status == true)
                                    {
                                        @Html.ActionLink("Deactivate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-warning btn-large", style = "width:150px; float:right" })

                                    }
                                    else
                                    {
                                        @Html.ActionLink("Activate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-success btn-large", style = "width:150px; float:right" })

                                    }
                                </div>
                                <div class="col-md-6">
                                    @Html.ActionLink("Delete", "DeleteBot", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-danger btn-large", style = "width:150px; float:left" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (i == 2)
                {
                    <div class="col-md-3">
                        <div id="dashdiv">
                            <center>
                                <h3 style="padding-top:1em">@Html.Raw(Model.TradeBots[i].Name)</h3>
                            </center>
                            <hr />
                            <div class="row">
                                <div class="col-md-6">
                                    <h4 id="leftPad">Trade Type: <strong>@Html.Raw(Model.TradeBots[i].Type)</strong></h4>
                                    <h4 id="leftPad">Async Trades: <strong>@Html.Raw(Model.TradeBots[i].NumberOfTrades.ToString())</strong></h4>
                                    <h4 id="leftPad">All Markets: <strong>@Html.Raw(Model.TradeBots[i].AllMarkets.ToString())</strong></h4>
                                    <h4 id="leftPad">Base: <strong>Bitcoin</strong></h4>
                                </div>
                                <div class="col-md-6">
                                    <h4>Bitcoin: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].AllocatedBitcoin, 5).ToString("0.###########"))</strong></h4>
                                    <h4>Take Profit: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].PercentTakeProfit, 2).ToString()) %</strong></h4>
                                    <h4>Stop Loss: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].PercentStopLoss, 2).ToString()) %</strong></h4>
                                    <h4>Exchange: <strong>@Html.Raw(Model.TradeBots[i].Exchange)</strong></h4>
                                </div>
                            </div>
                            <div class="row" style="padding-top:1.5em">
                                <div class="col-md-6">
                                    @if (Model.TradeBots[i].Status == true)
                                    {
                                        @Html.ActionLink("Deactivate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-warning btn-large", style = "width:150px; float:right" })

                                    }
                                    else
                                    {
                                        @Html.ActionLink("Activate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-success btn-large", style = "width:150px; float:right" })

                                    }
                                </div>
                                <div class="col-md-6">
                                    @Html.ActionLink("Delete", "DeleteBot", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-danger btn-large", style = "width:150px; float:left" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (i == 3)
                {
                    <div class="col-md-3">
                        <div id="dashdiv">
                            <center>
                                <h3 style="padding-top:1em">@Html.Raw(Model.TradeBots[i].Name)</h3>
                            </center>
                            <hr />
                            <div class="row">
                                <div class="col-md-6">
                                    <h4 id="leftPad">Trade Type: <strong>@Html.Raw(Model.TradeBots[i].Type)</strong></h4>
                                    <h4 id="leftPad">Async Trades: <strong>@Html.Raw(Model.TradeBots[i].NumberOfTrades.ToString())</strong></h4>
                                    <h4 id="leftPad">All Markets: <strong>@Html.Raw(Model.TradeBots[i].AllMarkets.ToString())</strong></h4>
                                    <h4 id="leftPad">Base: <strong>Bitcoin</strong></h4>
                                </div>
                                <div class="col-md-6">
                                    <h4>Bitcoin: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].AllocatedBitcoin, 5).ToString("0.###########"))</strong></h4>
                                    <h4>Take Profit: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].PercentTakeProfit, 2).ToString()) %</strong></h4>
                                    <h4>Stop Loss: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[i].PercentStopLoss, 2).ToString()) %</strong></h4>
                                    <h4>Exchange: <strong>@Html.Raw(Model.TradeBots[i].Exchange)</strong></h4>
                                </div>
                            </div>
                            <div class="row" style="padding-top:0.5em">
                                <div class="col-md-6">
                                    @if (Model.TradeBots[i].Status == true)
                                    {
                                        @Html.ActionLink("Deactivate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-warning btn-large", style = "width:150px; float:right" })

                                    }
                                    else
                                    {
                                        @Html.ActionLink("Activate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-success btn-large", style = "width:150px; float:right" })

                                    }
                                </div>
                                <div class="col-md-6">
                                    @Html.ActionLink("Delete", "DeleteBot", "TradingBot", new { botId = Model.TradeBots[i].Id }, new { @class = "btn btn-danger btn-large", style = "width:150px; float:left" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        }
    </div>
    <div class="row">
        @for (int j = 0; j < Model.TradeBots.Count; j++)
        {
            if (j < 8)
            {

                @if (j == 4)
                {
        <div class="col-md-3">
            <div id="dashdiv">
                <center>
                    <h3 style="padding-top:1em">@Html.Raw(Model.TradeBots[j].Name)</h3>
                </center>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="leftPad">Trade Type: <strong>@Html.Raw(Model.TradeBots[j].Type)</strong></h4>
                        <h4 id="leftPad">Async Trades: <strong>@Html.Raw(Model.TradeBots[j].NumberOfTrades.ToString())</strong></h4>
                        <h4 id="leftPad">All Markets: <strong>@Html.Raw(Model.TradeBots[j].AllMarkets.ToString())</strong></h4>
                        <h4 id="leftPad">Base: <strong>Bitcoin</strong></h4>
                    </div>
                    <div class="col-md-6">
                        <h4>Bitcoin: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].AllocatedBitcoin, 5).ToString("0.###########"))</strong></h4>
                        <h4>Take Profit: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].PercentTakeProfit, 2).ToString()) %</strong></h4>
                        <h4>Stop Loss: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].PercentStopLoss, 2).ToString()) %</strong></h4>
                        <h4>Exchange: <strong>@Html.Raw(Model.TradeBots[j].Exchange)</strong></h4>
                    </div>
                </div>
                <div class="row" style="padding-top:0.5em">
                    <div class="col-md-6">
                        @if (Model.TradeBots[j].Status == true)
                        {
                            @Html.ActionLink("Deactivate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-warning btn-large", style = "width:150px; float:right" })

                        }
                        else
                        {
                            @Html.ActionLink("Activate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-success btn-large", style = "width:150px; float:right" })

                        }
                    </div>
                    <div class="col-md-6">
                        @Html.ActionLink("Delete", "DeleteBot", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-danger btn-large", style = "width:150px; float:left" })
                    </div>
                </div>
            </div>
        </div>
                }
                else if (j == 5)
                {
        <div class="col-md-3">
            <div id="dashdiv">
                <center>
                    <h3 style="padding-top:1em">@Html.Raw(Model.TradeBots[j].Name)</h3>
                </center>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="leftPad">Trade Type: <strong>@Html.Raw(Model.TradeBots[j].Type)</strong></h4>
                        <h4 id="leftPad">Async Trades: <strong>@Html.Raw(Model.TradeBots[j].NumberOfTrades.ToString())</strong></h4>
                        <h4 id="leftPad">All Markets: <strong>@Html.Raw(Model.TradeBots[j].AllMarkets.ToString())</strong></h4>
                        <h4 id="leftPad">Base: <strong>Bitcoin</strong></h4>
                    </div>
                    <div class="col-md-6">
                        <h4>Bitcoin: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].AllocatedBitcoin, 5).ToString("0.###########"))</strong></h4>
                        <h4>Take Profit: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].PercentTakeProfit, 2).ToString()) %</strong></h4>
                        <h4>Stop Loss: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].PercentStopLoss, 2).ToString()) %</strong></h4>
                        <h4>Exchange: <strong>@Html.Raw(Model.TradeBots[j].Exchange)</strong></h4>
                    </div>
                </div>
                <div class="row" style="padding-top:0.5em">
                    <div class="col-md-6">
                        @if (Model.TradeBots[j].Status == true)
                        {
                            @Html.ActionLink("Deactivate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-warning btn-large", style = "width:150px; float:right" })

                        }
                        else
                        {
                            @Html.ActionLink("Activate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-success btn-large", style = "width:150px; float:right" })

                        }
                    </div>
                    <div class="col-md-6">
                        @Html.ActionLink("Delete", "DeleteBot", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-danger btn-large", style = "width:150px; float:left" })
                    </div>
                </div>
            </div>
        </div>
                }
                else if (j == 6)
                {
        <div class="col-md-3">
            <div id="dashdiv">
                <center>
                    <h3 style="padding-top:1em">@Html.Raw(Model.TradeBots[j].Name)</h3>
                </center>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="leftPad">Trade Type: <strong>@Html.Raw(Model.TradeBots[j].Type)</strong></h4>
                        <h4 id="leftPad">Async Trades: <strong>@Html.Raw(Model.TradeBots[j].NumberOfTrades.ToString())</strong></h4>
                        <h4 id="leftPad">All Markets: <strong>@Html.Raw(Model.TradeBots[j].AllMarkets.ToString())</strong></h4>
                        <h4 id="leftPad">Base: <strong>Bitcoin</strong></h4>
                    </div>
                    <div class="col-md-6">
                        <h4>Bitcoin: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].AllocatedBitcoin, 5).ToString("0.###########"))</strong></h4>
                        <h4>Take Profit: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].PercentTakeProfit, 2).ToString()) %</strong></h4>
                        <h4>Stop Loss: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].PercentStopLoss, 2).ToString()) %</strong></h4>
                        <h4>Exchange: <strong>@Html.Raw(Model.TradeBots[j].Exchange)</strong></h4>
                    </div>
                </div>
                <div class="row" style="padding-top:0.5em">
                    <div class="col-md-6">
                        @if (Model.TradeBots[j].Status == true)
                        {
                            @Html.ActionLink("Deactivate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-warning btn-large", style = "width:150px; float:right" })

                        }
                        else
                        {
                            @Html.ActionLink("Activate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-success btn-large", style = "width:150px; float:right" })

                        }
                    </div>
                    <div class="col-md-6">
                        @Html.ActionLink("Delete", "DeleteBot", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-danger btn-large", style = "width:150px; float:left" })
                    </div>
                </div>
            </div>
        </div>
                }
                else if (j == 7)
                {
        <div class="col-md-3">
            <div id="dashdiv">
                <center>
                    <h3 style="padding-top:1em">@Html.Raw(Model.TradeBots[j].Name)</h3>
                </center>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="leftPad">Trade Type: <strong>@Html.Raw(Model.TradeBots[j].Type)</strong></h4>
                        <h4 id="leftPad">Async Trades: <strong>@Html.Raw(Model.TradeBots[j].NumberOfTrades.ToString())</strong></h4>
                        <h4 id="leftPad">All Markets: <strong>@Html.Raw(Model.TradeBots[j].AllMarkets.ToString())</strong></h4>
                        <h4 id="leftPad">Base: <strong>Bitcoin</strong></h4>
                    </div>
                    <div class="col-md-6">
                        <h4>Bitcoin: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].AllocatedBitcoin, 5).ToString("0.###########"))</strong></h4>
                        <h4>Take Profit: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].PercentTakeProfit, 2).ToString()) %</strong></h4>
                        <h4>Stop Loss: <strong>@Html.Raw(Decimal.Round(Model.TradeBots[j].PercentStopLoss, 2).ToString()) %</strong></h4>
                        <h4>Exchange: <strong>@Html.Raw(Model.TradeBots[j].Exchange)</strong></h4>
                    </div>
                </div>
                <div class="row" style="padding-top:0.5em">
                    <div class="col-md-6">
                        @if (Model.TradeBots[j].Status == true)
                        {
                            @Html.ActionLink("Deactivate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-warning btn-large", style = "width:150px; float:right" })

                        }
                        else
                        {
                            @Html.ActionLink("Activate", "SwitchBotPower", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-success btn-large", style = "width:150px; float:right" })

                        }
                    </div>
                    <div class="col-md-6">
                        @Html.ActionLink("Delete", "DeleteBot", "TradingBot", new { botId = Model.TradeBots[j].Id }, new { @class = "btn btn-danger btn-large", style = "width:150px; float:left" })
                    </div>
                </div>
            </div>
        </div>
                }
            }
        }
    </div>
</div>

<div class="modal fade" id="myGiftModal" role="dialog" data-url='@Url.Action("CreateNew", "TradingBot")'></div>

<script type="text/javascript">
    $(document).ready(function () {

        $('#Gift_Form').click(function () {

            var url = $('#myGiftModal').data('url');
            $.get(url, function (data) {

                $("#myGiftModal").html(data);
                $("#myGiftModal").modal('show');
            });
        });

    });
</script>